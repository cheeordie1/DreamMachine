package assignment;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Date;
import java.sql.*;


public class Quiz {
	//uneditable field
	public int q_id;
	public Date date;
	
	public int u_id; 
	public ArrayList<Question> questions;
	public String name;
	
	//Quiz Options with Default Values Set
	public boolean singlePage = true;
	public boolean randQuestion = false;
	public boolean immediateCorrect = false;
	public boolean practiceModeOption = false;

	/*
	 * Constructor for making a quiz on website
	 */
	public Quiz () {
	}
	
	/*
	 * Constructor for uploading quiz from database 
	 */
	public Quiz (ResultSet quizData) {
		try {
			this.q_id = quizData.getInt("pid"); 
			this.name = quizData.getString("name");
			this.u_id = quizData.getInt("uid");
			this.date = quizData.getDate("date");
			this.singlePage = quizData.getBoolean("singlePage");
			this.randQuestion = quizData.getBoolean("randQuestion");
			this.practiceModeOption = quizData.getBoolean("practiceModeOpt");
		} catch (Exception ex) {
			//huh?
		}
		populateQuestions(); 
	}
	
	
	/*
	 * Submits a query for the questions table to return
	 * entries with the corresponding q_id.
	 * Adds new Question instances to the questions table
	 */
	private void populateQuestions() {
		ResultSet questionData = DBConnection.query("SELECT * FROM questions WHERE pid = " + q_id + ";");
		try {
			while (questionData.next()) {
				questions.add(new Question(questionData));
			}
		} catch (Exception e) {
			//huh 2?
		}
	}
	
	// ensures that the u_id associated with the quiz is valid
	public boolean validateQuiz(){
		return u_id != 0;
	}


	/*
	 * Insert the quiz into the quizzes table and assign the 
	 * q_id instance variable to the unique id generated by 
	 * adding the quiz to the table.
	 */
	public boolean save() {
		validateQuiz();
		String entry = "INSERT INTO quizzes (uid,singlePage,randQuestion,practiceMode," +
				"immediateCorrect) VALUES(" + u_id +","+ singlePage +","+ randQuestion
				+","+ practiceModeOption +","+ immediateCorrect + ");";
		this.q_id = DBConnection.update(entry);
		return true; 
	}
	
	public boolean update() {
		validateQuiz();
		String entry = "INSERT INTO quizzes (uid,name,cdate,singlePage,randQuestion,practiceMode," +
				"immediateCorrect) VALUES(" + u_id +","+ name +","+ date +","+ singlePage
				+","+ randQuestion +","+ practiceModeOption +","+ immediateCorrect + ");";
		this.q_id = DBConnection.update(entry);
		return true; 
	}

	/*
	 * Saves the question to associate it with the given quiz id
	 * and adds the question to the question list.
	 */
	public void addQuestion (Question question) {
		question.save();
		questions.add(question);
	}
	
	/*
	 * Adds the users score to the Score table 
	 */
	public void enterScore (int score, int time) {
		//Set into scores database
	}
	
	/*
	 * Queries Score table using q_id and returns
	 * the highest score
	 */
	public int HighScore() {
		//get from database 
		return 0;
	}
	
	/*
	 * Queries Score table using q_id and returns
	 * the length of the results set. 
	 */
	public int timesPlayed() {
		//get from database 
		return 0;
	}
	

	/* If randQuestion boolean is set, then this method
	 * randomizes the questions list.
	 */
	public void randomizeQuestions(boolean randQuestion) {
		if (randQuestion) {
			Collections.shuffle(questions);
		}
	}

/*	public static ArrayList<Quiz> searchByID(int id) {
		ResultSet quizData = DBConnection.query("SELECT * FROM quizzes WHERE id=" + id +";");
	}

	public static ArrayList<Quiz> searchByName(String name) {
		
	}
	
	public static ArrayList<Quiz> searchByUID(int uid) {
		
	}*/
}
